type ActivationDelaySet @entity(immutable: true) {
  id: Bytes!
  oldActivationDelay: BigInt! # uint32
  newActivationDelay: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClaimerSet @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  claimer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GlobalCommissionBipsSet @entity(immutable: true) {
  id: Bytes!
  oldGlobalCommissionBips: Int! # uint16
  newGlobalCommissionBips: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PaymentClaimed @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  claimer: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PaymentUpdaterSet @entity(immutable: true) {
  id: Bytes!
  oldPaymentUpdater: Bytes! # address
  newPaymentUpdater: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RootSubmitted @entity(immutable: true) {
  id: Bytes!
  root: Bytes! # bytes32
  paymentsCalculatedUntilTimestamp: BigInt! # uint32
  activatedAfter: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
